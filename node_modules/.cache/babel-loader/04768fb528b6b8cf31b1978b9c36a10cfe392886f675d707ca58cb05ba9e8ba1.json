{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\graph-visualizer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst start_row = 9;\nconst start_col = 9;\nconst end_row = 20;\nconst end_col = 50;\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  function createNode(row, col) {\n    return {\n      row,\n      col,\n      isStart: row === start_row && col === start_col,\n      isFinish: row === end_row && col === end_col,\n      isWall: false,\n      isVisited: false\n    };\n  }\n  const createGrid = (rows, cols) => {\n    const grid = [];\n    for (let row = 0; row < rows; row++) {\n      const currentRow = [];\n      for (let col = 0; col < cols; col++) {\n        currentRow.push(createNode(row, col));\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n  const initialGrid = createGrid(30, 65);\n  const [grid, setGrid] = useState(initialGrid);\n  const [mouseIsPressed, setMouseIsPressed] = useState(false);\n  const handleClick = () => {\n    setDarkMode(!darkMode);\n  };\n  const setMode = style => {\n    let backgroundColor, textColor, buttonColor;\n    if (darkMode) {\n      backgroundColor = \"black\";\n      textColor = 'white';\n      buttonColor = \"#303030\";\n    } else {\n      backgroundColor = 'white';\n      textColor = 'black';\n      buttonColor = \"#ffe291\";\n    }\n    if (style === 1) {\n      return backgroundColor;\n    } else if (style === 2) {\n      return textColor;\n    } else {\n      return buttonColor;\n    }\n  };\n  const drawNode = node => {\n    if (node.isStart) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.icons8.com/ios-glyphs/30/null/play--v1.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 18\n      }, this);\n    }\n    if (node.isFinish) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.icons8.com/ios-glyphs/30/null/finish-flag.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this);\n    }\n  };\n  const nodeName = (row, col) => {\n    return `node ${row}-${col}`;\n  };\n  const getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    newGrid[row][col] = {\n      ...node,\n      isWall: !node.isWall\n    };\n    return newGrid;\n  };\n  const handleMouseDown = (row, col) => {\n    const newGrid = getNewGridWithWallToggled(grid, row, col);\n    setGrid(newGrid);\n    setMouseIsPressed(true);\n  };\n  const handleMouseEnter = (row, col) => {\n    if (!mouseIsPressed) return;\n    const newGrid = getNewGridWithWallToggled(grid, row, col);\n    setGrid(newGrid);\n  };\n  const handleMouseUp = () => {\n    setMouseIsPressed(false);\n  };\n  const getAnchor = (row, col) => {\n    if (grid[row][col].isStart) {\n      return \"node-start\";\n    } else if (grid[row][col].isFinish) {\n      return \"node-finish\";\n    } else if (grid[row][col].isWall) {\n      return \"node-wall\";\n    } else if (grid[row][col].isVisited) {\n      return \"node-visited\";\n    } else {\n      return \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: setMode(1),\n      color: setMode(2)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"darkmode-container\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"darkmode-button\",\n          style: {\n            backgroundColor: setMode(3)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"darkmode-input\",\n            onClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"darkmode-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"moon\",\n              src: \"https://img.icons8.com/sf-regular/48/null/moon-symbol.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"sun\",\n            src: \"https://img.icons8.com/material-outlined/24/000000/smiling-sun.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: grid.map((row, rowIndex) => {\n          return row.map((column, columnIndex) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: nodeName(rowIndex, columnIndex),\n              className: `node ${getAnchor(rowIndex, columnIndex)}`,\n              onMouseDown: () => {\n                handleMouseDown(rowIndex, columnIndex);\n              },\n              onMouseEnter: () => handleMouseEnter(rowIndex, columnIndex),\n              onMouseUp: () => handleMouseUp(),\n              children: drawNode(grid[rowIndex][columnIndex])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"RAuWCYnDKF0ohtrnfDOy8qF7wRY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","start_row","start_col","end_row","end_col","App","darkMode","setDarkMode","createNode","row","col","isStart","isFinish","isWall","isVisited","createGrid","rows","cols","grid","currentRow","push","initialGrid","setGrid","mouseIsPressed","setMouseIsPressed","handleClick","setMode","style","backgroundColor","textColor","buttonColor","drawNode","node","nodeName","getNewGridWithWallToggled","newGrid","slice","handleMouseDown","handleMouseEnter","handleMouseUp","getAnchor","color","map","rowIndex","column","columnIndex"],"sources":["C:/Users/User/WebstormProjects/graph-visualizer/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nconst start_row = 9;\nconst start_col = 9;\nconst end_row = 20;\nconst end_col = 50;\n\nfunction App() {\n\n  const [darkMode, setDarkMode] = useState(true);\n\n  function createNode(row, col) {\n      return {\n          row,\n          col,\n          isStart: row === start_row && col === start_col,\n          isFinish: row === end_row && col === end_col,\n          isWall: false,\n          isVisited: false,\n\n      };\n  }\n\n  const createGrid = (rows, cols) => {\n        const grid = [];\n        for (let row = 0; row < rows; row++) {\n            const currentRow = [];\n            for (let col = 0; col < cols; col++) {\n                currentRow.push(createNode(row, col));\n            }\n            grid.push(currentRow);\n        }\n        return grid;\n  }\n\n  const initialGrid = createGrid(30, 65);\n  const [grid, setGrid] = useState(initialGrid);\n  const [mouseIsPressed, setMouseIsPressed] = useState(false);\n\n  const handleClick = () => {\n      setDarkMode(!darkMode);\n  }\n\n  const setMode = (style) => {\n      let backgroundColor, textColor, buttonColor;\n\n      if (darkMode) {\n          backgroundColor = \"black\";\n          textColor = 'white';\n          buttonColor = \"#303030\";\n      } else {\n          backgroundColor = 'white';\n          textColor = 'black';\n          buttonColor = \"#ffe291\";\n      }\n\n      if (style === 1) {\n          return backgroundColor;\n      } else if (style === 2) {\n          return textColor;\n      } else {\n            return buttonColor;\n        }\n  }\n\n\n\n\n\n\n  const drawNode = (node) => {\n      if (node.isStart) {\n          return <img src=\"https://img.icons8.com/ios-glyphs/30/null/play--v1.png\"/>;\n      }\n      if (node.isFinish) {\n          return <img src=\"https://img.icons8.com/ios-glyphs/30/null/finish-flag.png\"/>\n      }\n\n  }\n\n  const nodeName = (row, col) => {\n        return `node ${row}-${col}`;\n  }\n\n  const getNewGridWithWallToggled = (grid, row, col) => {\n      const newGrid = grid.slice();\n      const node = newGrid[row][col];\n      newGrid[row][col] = {\n          ...node,\n          isWall: !node.isWall,\n      };\n      return newGrid;\n  }\n\n  const handleMouseDown = (row, col) => {\n      const newGrid = getNewGridWithWallToggled(grid, row, col);\n      setGrid(newGrid);\n      setMouseIsPressed(true);\n  }\n\n  const handleMouseEnter = (row, col) => {\n      if (!mouseIsPressed) return;\n      const newGrid = getNewGridWithWallToggled(grid, row, col);\n      setGrid(newGrid);\n  }\n\n  const handleMouseUp = () => {\n      setMouseIsPressed(false);\n  }\n\n  const getAnchor= (row, col) => {\n      if (grid[row][col].isStart) {\n          return \"node-start\";\n      } else if (grid[row][col].isFinish) {\n          return \"node-finish\";\n      } else if (grid[row][col].isWall) {\n          return \"node-wall\";\n      } else if (grid[row][col].isVisited) {\n          return \"node-visited\";\n      } else {\n          return \"\";\n      }\n\n  }\n\n\n  return (\n      <div className=\"App\" style={{backgroundColor: setMode(1), color: setMode(2)}}>\n          <div className=\"header-container\">\n              <div className=\"darkmode-container\">\n                  <label className=\"darkmode-button\" style={{backgroundColor: setMode(3)}}>\n\n                      <input type=\"checkbox\" className=\"darkmode-input\" onClick={handleClick}></input>\n                      <span className=\"darkmode-toggle\">\n                          <img className=\"moon\" src=\"https://img.icons8.com/sf-regular/48/null/moon-symbol.png\"/>\n                      </span>\n                      <img className=\"sun\" src=\"https://img.icons8.com/material-outlined/24/000000/smiling-sun.png\"/>\n\n                  </label>\n              </div>\n              <div className=\"header\">\n                  <header>Visualizer</header>\n              </div>\n          </div>\n          <div className=\"map-container\">\n              <div className=\"map\">\n                  {grid.map((row, rowIndex) => {\n                      return (\n                            row.map((column, columnIndex) => {\n                                return (\n                                    <div id={nodeName(rowIndex, columnIndex)}\n                                         className={`node ${getAnchor(rowIndex, columnIndex)}`}\n                                         onMouseDown={() => {handleMouseDown(rowIndex, columnIndex)} }\n                                         onMouseEnter={() => handleMouseEnter(rowIndex, columnIndex)}\n                                         onMouseUp={() => handleMouseUp()}>\n                                            {drawNode(grid[rowIndex][columnIndex])}\n                                    </div>\n                                )\n                            })\n                      )\n                  })}\n              </div>\n          </div>\n      </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}