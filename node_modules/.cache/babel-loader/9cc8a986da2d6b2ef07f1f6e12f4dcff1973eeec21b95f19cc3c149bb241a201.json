{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\graph-visualizer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst start_row = 9;\nconst start_col = 9;\nconst end_row = 20;\nconst end_col = 50;\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  const handleClick = () => {\n    setDarkMode(!darkMode);\n  };\n  const setMode = style => {\n    let backgroundColor, textColor, buttonColor;\n    if (darkMode) {\n      backgroundColor = \"black\";\n      textColor = 'white';\n      buttonColor = \"#303030\";\n    } else {\n      backgroundColor = 'white';\n      textColor = 'black';\n      buttonColor = \"#ffe291\";\n    }\n    if (style === 1) {\n      return backgroundColor;\n    } else if (style === 2) {\n      return textColor;\n    } else {\n      return buttonColor;\n    }\n  };\n  function createNode(row, col) {\n    return {\n      row,\n      col,\n      isStart: row === start_row && col === start_col,\n      isFinish: row === end_row && col === end_col\n    };\n  }\n  const createGrid = (rows, cols) => {\n    const grid = [];\n    for (let row = 0; row < rows; row++) {\n      const currentRow = [];\n      for (let col = 0; col < cols; col++) {\n        currentRow.push(createNode(row, col));\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n  const globalGrid = createGrid(30, 65);\n  const drawNode = node => {\n    if (node.isStart) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://img.icons8.com/ios-glyphs/30/null/play--v1.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this);\n    }\n    if (node.isFinish) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: setMode(1),\n      color: setMode(2)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"darkmode-container\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"darkmode-button\",\n          style: {\n            backgroundColor: setMode(3)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"darkmode-input\",\n            onClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"darkmode-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"moon\",\n              src: \"https://img.icons8.com/sf-regular/48/null/moon-symbol.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"sun\",\n            src: \"https://img.icons8.com/material-outlined/24/000000/smiling-sun.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: globalGrid.map((row, rowIndex) => {\n          return row.map((column, columnIndex) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"node\",\n              children: [rowIndex, \", \", columnIndex, /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"node-label\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"node-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this)]\n            }, columnIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"U9cQrERlY+h8pHe8i/lj95QawrI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","start_row","start_col","end_row","end_col","App","darkMode","setDarkMode","handleClick","setMode","style","backgroundColor","textColor","buttonColor","createNode","row","col","isStart","isFinish","createGrid","rows","cols","grid","currentRow","push","globalGrid","drawNode","node","color","map","rowIndex","column","columnIndex"],"sources":["C:/Users/User/WebstormProjects/graph-visualizer/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nconst start_row = 9;\nconst start_col = 9;\nconst end_row = 20;\nconst end_col = 50;\n\nfunction App() {\n\n  const [darkMode, setDarkMode] = useState(true);\n\n  const handleClick = () => {\n      setDarkMode(!darkMode);\n  }\n\n  const setMode = (style) => {\n      let backgroundColor, textColor, buttonColor;\n\n      if (darkMode) {\n          backgroundColor = \"black\";\n          textColor = 'white';\n          buttonColor = \"#303030\";\n      } else {\n          backgroundColor = 'white';\n          textColor = 'black';\n          buttonColor = \"#ffe291\";\n      }\n\n      if (style === 1) {\n          return backgroundColor;\n      } else if (style === 2) {\n          return textColor;\n      } else {\n            return buttonColor;\n        }\n  }\n\n  function createNode(row, col) {\n        return {row,\n                col,\n                isStart: row === start_row && col === start_col,\n                isFinish: row === end_row && col === end_col,\n        };\n  }\n\n  const createGrid = (rows, cols) => {\n      const grid = [];\n      for (let row = 0; row < rows; row++) {\n          const currentRow = [];\n          for (let col = 0; col < cols; col++) {\n              currentRow.push(createNode(row, col));\n          }\n          grid.push(currentRow);\n      }\n      return grid;\n  }\n\n  const globalGrid = createGrid(30, 65);\n\n  const drawNode = (node) => {\n      if (node.isStart) {\n          return <img src=\"https://img.icons8.com/ios-glyphs/30/null/play--v1.png\"/>;\n      }\n        if (node.isFinish) {\n            \n        }\n  }\n\n\n  return (\n      <div className=\"App\" style={{backgroundColor: setMode(1), color: setMode(2)}}>\n          <div className=\"header-container\">\n              <div className=\"darkmode-container\">\n                  <label className=\"darkmode-button\" style={{backgroundColor: setMode(3)}}>\n\n                      <input type=\"checkbox\" className=\"darkmode-input\" onClick={handleClick}></input>\n                      <span className=\"darkmode-toggle\">\n                          <img className=\"moon\" src=\"https://img.icons8.com/sf-regular/48/null/moon-symbol.png\"/>\n                      </span>\n                      <img className=\"sun\" src=\"https://img.icons8.com/material-outlined/24/000000/smiling-sun.png\"/>\n\n                  </label>\n              </div>\n              <div className=\"header\">\n                  <header>Visualizer</header>\n              </div>\n          </div>\n          <div className=\"map-container\">\n              <div className=\"map\">\n                  {globalGrid.map((row, rowIndex) => {\n                      return (\n                            row.map((column, columnIndex) => {\n                                return (\n                                    <div key={columnIndex} className=\"node\">\n                                        {rowIndex}, {columnIndex}\n                                        <label className=\"node-label\">\n                                            <input type=\"checkbox\" className=\"node-input\"></input>\n                                        </label>\n                                    </div>\n                                )\n                            })\n                      )\n                  })}\n              </div>\n          </div>\n      </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}